/**
 * ADDRESS MODEL
 *
 * Find Table Schema Here: "/database/schema.sql"
 *
 * id BIGSERIAL PRIMARY KEY NOT NULL,

 * addressLine1 TEXT DEFAULT NULL,
 * addressLine2 TEXT DEFAULT NULL,
 * city TEXT DEFAULT NULL,
 * state TEXT DEFAULT NULL,
 * country TEXT DEFAULT NULL,
 * zipcode TEXT DEFAULT NULL,

 * associatedEntityID STRING NOT NULL,
 * associatedEntityType STRING NOT NULL,

 * -- Autogenerated by Sequelize
 * deletedAt TIMESTAMP WITHOUT TIME ZONE DEFAULT NULL,
 * createdAt TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT (now() AT TIME ZONE 'utc'),
 * updatedAt TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT (now() AT TIME ZONE 'utc')
 *
 */

'use strict';

// require custom node modules
const constants = require('../../helpers/constants');

module.exports = (sequelize, DataTypes) => {
  const Address = sequelize.define('address', {

    id: {
      type: DataTypes.INTEGER,
      primaryKey: true,
      autoIncrement: true,
      allowNull: false,
    },
    // All foreign keys are added in associations

    addressableId: {
      type: DataTypes.INTEGER,
      allowNull: false,
    },
    addressableType: {
      type: DataTypes.STRING,
      allowNull: false,
    },

    addressLine1: {
      type: DataTypes.TEXT,
      allowNull: true
    },

    addressLine2: {
      type: DataTypes.TEXT,
      defaultValue: '',
      allowNull: false
    },

    city: {
      type: DataTypes.TEXT,
      allowNull: true
    },

    state: {
      type: DataTypes.TEXT,
      allowNull: true
    },

    country: {
      type: DataTypes.TEXT,
      allowNull: true
    },

    zipcode: {
      type: DataTypes.TEXT,
      allowNull: true
    },

  }, {
    timestamps: true, // allows sequelize to create timestamps automatically

    // A paranoid table is one that, when told to delete a record, it will not truly delete it. Instead, a special column called deletedAt will have its value set to the timestamp of that deletion request. This means that paranoid tables perform a soft-deletion of records, instead of a hard-deletion.
    // For select (findOne, findAll etc) automatically ignore all rows when deletedAt is not null, if you really want to let the query see the soft-deleted records, you can pass the paranoid: false option to the query method
    paranoid: true,
    freezeTableName: true, // allows sequelize to pluralize the model name
    tableName: 'Addresses', // define table name, must be PascalCase!
    hooks: {},
    indexes: []
  });

  Address.associate = models => {
    Address.belongsTo(models.agent, { foreignKey: 'addressableId', constraints: false })
    Address.belongsTo(models.closer, { foreignKey: 'addressableId', constraints: false })
    Address.belongsTo(models.lender, { foreignKey: 'addressableId', constraints: false })
    Address.belongsTo(models.resource, { foreignKey: 'addressableId', constraints: false })
  }

  return Address;
}
